@using AutoMapper
@using CPMusic.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Internal
@inject ApplicationDbContext DbContext
@inject IMapper Mapper

@{
    IEnumerable<Song> songs = DbContext.Songs
                                       .Include(col => col.ArtistSongs)
                                       .ThenInclude(artistSong => artistSong.Artist)
                                       .OrderByDescending(col => col.CreatedAt)
                                       .Take(6);

    IEnumerable<SongViewModel> songsViewModel = Mapper.Map<IEnumerable<SongViewModel>>(songs);
}

<!-- Hôm nay nghe gì? -->
<div class="row">
    <div class="align-items-center col-12 d-flex justify-content-between mb-2">
        <h2 class="mb-0 text-uppercase">Hôm nay nghe gì?</h2>
    </div>

    @foreach (SongViewModel song in songsViewModel)
    {
        <div class="col-6 col-lg-2 col-sm-4">
            <div class="bg-transparent card mb-0 shadow-none">
                <a asp-action="NgheNhac" asp-controller="Song" asp-route-id="@song.Id" title="@song.CapitalizeName - @song.ArtistsToString">
                    <img alt="@song.Name" class="card-img-top img-fluid" src="@song.Thumbnail">
                </a>
                <div class="card-body px-0 py-1">
                    <a asp-action="NgheNhac" asp-controller="Song" asp-route-id="@song.Id" title="@song.CapitalizeName - @song.ArtistsToString">
                        <h4 class="m-0 text-capitalize text-truncate">@song.Name</h4>
                        @if (song.OtherName != null)
                        {
                            <h5 class="m-0 text-capitalize text-truncate">@song.OtherName</h5>
                        }
                    </a>
                    <h5 class="text-muted text-truncate">
                        @Html.Raw(song.Artists.Select(artist => $"<a href='/nghe-si/{artist?.Id.ToString()}'>{artist?.Name}</a>").Join(", "))
                    </h5>
                </div>
            </div>
        </div>
    }
</div>